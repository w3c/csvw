# CSV+ tests
## Distributed under both the W3C Test Suite License[1] and the W3C 3-
## clause BSD License[2]. To contribute to a W3C Test Suite, see the
## policies and contribution forms [3]
##
## 1. http://www.w3.org/Consortium/Legal/2008/04-testsuite-license
## 2. http://www.w3.org/Consortium/Legal/2008/03-bsd-license
## 3. http://www.w3.org/2004/10/27-testcases
##
## Test types (for now)
## * TestJsonSimpleEval  - tests CSV evaluation to JSON
## * TestRdfSimpleEval   - tests CSV evaluation to RDF using graph isomorphism
## * TestRdfSimpleSparql - tests CSV evaulation to RDF using SPARQL ASK query

@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix mf:   <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix qt:   <http://www.w3.org/2001/sw/DataAccess/tests/test-query#> .
@prefix csvt: <http://w3c.github.io/csvw/test-vocab#> .

<>  a mf:Manifest ;
    mf:name "CSV+ tests" ;
    mf:entries (
      # Right now, just syntax tests; later, replicate for different transformations
      <test001j>
      <test002j>
      <test003j>
      <test004j>
      <test005j>
      <test006j>
      <test007j>
      <test008j>
      <test009j>
      <test001r>
      <test002r>
      <test003r>
      <test004r>
      <test005r>
      <test006r>
      <test007r>
      <test008r>
      <test009r>
    ) .

<test001j> a csvt:TestJsonSimpleEval;
  mf:name       "Simple table (json)";
  rdfs:comment  "The simplest possible table";
  csvt:approval csvt:Proposed;
  mf:action     <test001.csv>;
  mf:result     <test001.jsonld>;
  .

<test001r> a csvt:TestRdfSimpleEval;
  mf:name       "Simple table (rdf)";
  rdfs:comment  "The simplest possible table";
  csvt:approval csvt:Proposed;
  mf:action     <test001.csv>;
  mf:result     <test001.jsonld>;
  .

<test002j> a csvt:TestJsonSimpleEval;
  mf:name       "Table with quoted field (json)";
  rdfs:comment  "Table with one field being quoted";
  csvt:approval csvt:Proposed;
  mf:action     <test002.csv>;
  mf:result     <test002.jsonld>;
  .

<test002r> a csvt:TestRdfSimpleEval;
  mf:name       "Table with quoted field (rdf)";
  rdfs:comment  "Table with one field being quoted";
  csvt:approval csvt:Proposed;
  mf:action     <test002.csv>;
  mf:result     <test002.jsonld>;
  .

<test003j> a csvt:TestJsonSimpleEval;
  mf:name       "Simple table with surrounding spaces (json)";
  rdfs:comment  "Table with whitespace before and after every field";
  csvt:approval csvt:Proposed;
  mf:action     <test003.csv>;
  mf:result     <test003.jsonld>;
  .

<test003r> a csvt:TestRdfSimpleEval;
  mf:name       "Simple table with surrounding spaces (rdf)";
  rdfs:comment  "Table with whitespace before and after every field";
  csvt:approval csvt:Proposed;
  mf:action     <test003.csv>;
  mf:result     <test003.jsonld>;
  .

<test004j> a csvt:TestJsonSimpleEval;
  mf:name       "Table with quoted field with surrounding spaces (json)";
  rdfs:comment  "Table with whitespace before and after every field and one field quoted";
  csvt:approval csvt:Proposed;
  mf:action     <test004.csv>;
  mf:result     <test004.jsonld>;
  .

<test004r> a csvt:TestRdfSimpleEval;
  mf:name       "Table with quoted field with surrounding spaces (rdf)";
  rdfs:comment  "Table with whitespace before and after every field and one field quoted";
  csvt:approval csvt:Proposed;
  mf:action     <test004.csv>;
  mf:result     <test004.jsonld>;
  .

<test005j> a csvt:TestJsonSimpleEval;
  mf:name       "Table with identifiers references (json)";
  rdfs:comment  "A table with entity identifiers and references to other entities";
  csvt:approval csvt:Proposed;
  mf:action     <test005.csv>;
  mf:result     <test005.jsonld>;
  .

<test005r> a csvt:TestRdfSimpleEval;
  mf:name       "Table with identifiers references (rdf)";
  rdfs:comment  "A table with entity identifiers and references to other entities";
  csvt:approval csvt:Proposed;
  mf:action     <test005.csv>;
  mf:result     <test005.jsonld>;
  .

<test006j> a csvt:TestJsonSimpleEval;
  mf:name       "Simple join table without identifiers (json)";
  rdfs:comment  "Records contain two entities with relationships which are duplicated";
  csvt:approval csvt:Proposed;
  mf:action     <test006.csv>;
  mf:result     <test006.jsonld>;
  .

<test006r> a csvt:TestRdfSimpleEval;
  mf:name       "Simple join table without identifiers (rdf)";
  rdfs:comment  "Records contain two entities with relationships which are duplicated";
  csvt:approval csvt:Proposed;
  mf:action     <test006.csv>;
  mf:result     <test006.jsonld>;
  .

<test007j> a csvt:TestJsonSimpleEval;
  mf:name       "Join table with unique identifiers (json)";
  rdfs:comment  "Joined data with identified records";
  csvt:approval csvt:Proposed;
  mf:action     <test007.csv>;
  mf:result     <test007.jsonld>;
  .

<test007r> a csvt:TestRdfSimpleEval;
  mf:name       "Join table with unique identifiers (rdf)";
  rdfs:comment  "Joined data with identified records";
  csvt:approval csvt:Proposed;
  mf:action     <test007.csv>;
  mf:result     <test007.jsonld>;
  .

<test008j> a csvt:TestJsonSimpleEval;
  mf:name       "Microsyntax - internal field separator (json)";
  rdfs:comment  "One field has comma-separated values";
  csvt:approval csvt:Proposed;
  mf:action     <test008.csv>;
  mf:result     <test008.jsonld>;
  .

<test008r> a csvt:TestRdfSimpleEval;
  mf:name       "Microsyntax - internal field separator (rdf)";
  rdfs:comment  "One field has comma-separated values";
  csvt:approval csvt:Proposed;
  mf:action     <test008.csv>;
  mf:result     <test008.jsonld>;
  .

<test009j> a csvt:TestJsonSimpleEval;
  mf:name       "Microsyntax - formatted time (json)";
  rdfs:comment  "Field with parseable human formatted time";
  csvt:approval csvt:Proposed;
  mf:action     <test009.csv>;
  mf:result     <test009.jsonld>;
  .

<test009r> a csvt:TestRdfSimpleEval;
  mf:name       "Microsyntax - formatted time (rdf)";
  rdfs:comment  "Field with parseable human formatted time";
  csvt:approval csvt:Proposed;
  mf:action     <test009.csv>;
  mf:result     <test009.jsonld>;
  .
